/*
 * Copyright (c) 2022, Connect Tech Inc.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//#include "tegra234-orin-agx-cti-csi.dtsi"
#include "dt-bindings/clock/tegra234-clock.h"

#define CAM0_RST_L  TEGRA234_MAIN_GPIO(I, 0)
#define CAM0_PWDN   TEGRA234_MAIN_GPIO(H, 7)
#define CAM1_RST_L  TEGRA234_MAIN_GPIO(AC, 1)
#define CAM1_PWDN   TEGRA234_MAIN_GPIO(AC, 0)
#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)


#define AVT_MODE_0 \
	discontinuous_clk = "no";  \
    cil_settletime = "0"; \
    embedded_metadata_height = "0"; \
    mclk_khz = "24000"; \
    phy_mode = "DPHY"; \
    dpcm_enable = "false"; \
   	csi_pixel_bit_depth = "4"; \
   	active_w = "5488"; \
   	active_h = "4112"; \
   	pixel_t = "bayer_bggr"; \
    readout_orientation = "0"; \
    line_length = "5488"; \
    inherent_gain = "1"; \
    mclk_multiplier = "31.25"; \
    pix_clk_hz = "750000000"; \
    gain_factor = "16"; \
   	framerate_factor = "1000000"; \
    exposure_factor = "1000000"; \
   	min_gain_val = "16"; \
    max_gain_val = "256"; \
    step_gain_val = "1"; \
    min_hdr_ratio = "1"; \
    max_hdr_ratio = "64"; \
   	min_framerate = "1500000"; \
    max_framerate = "30000000"; \
    step_framerate = "1"; \
    min_exp_time = "34"; \
    max_exp_time = "550385"; \
    step_exp_time = "1";

#define AVT_NODE_COMMON \
	status = "okay"; \
	clocks = <&bpmp_clks TEGRA234_CLK_EXTPERIPH1>, \
             <&bpmp_clks TEGRA234_CLK_PLLP_OUT0>; \
	clock-names = "extperiph1", "pllp_grtba"; \
	mclk = "extperiph1"; \
	compatible = "alliedvision,avt_csi2";


/{

tegra-capture-vi {
            num-channels = <6>;
            status="okay";
            ports {
                #address-cells = <1>;
                #size-cells = <0>;
                port@0 {
                    reg = <0>;
                    status="okay";
                    avt_csi2_vi_in0: endpoint {
                        status="okay";
                        port-index = <0>;
                        bus-width = <2>;
                        remote-endpoint = <&avt_csi2_csi_out0>;
                    };
                };
                port@1 {
                    reg = <1>;
                    status="okay";
                    avt_csi2_vi_in1: endpoint {
                        status="okay";
                        port-index = <1>;
                        bus-width = <2>;
                        remote-endpoint = <&avt_csi2_csi_out1>;
                    };
                };
                port@2 {
                    reg = <2>;
                    status="okay";
                    avt_csi2_vi_in2: endpoint {
                        status="okay";
                        port-index = <2>;
                        bus-width = <2>;
                        remote-endpoint = <&avt_csi2_csi_out2>;
                    };
                };
                port@3 {
                    reg = <3>;
                    status="okay";
                    avt_csi2_vi_in3: endpoint {
                        status="okay";
                        port-index = <3>;
                        bus-width = <2>;
                        remote-endpoint = <&avt_csi2_csi_out3>;
                    };
                };
                port@4 {
                    reg = <4>;
                    status="okay";
                    avt_csi2_vi_in4: endpoint {
                        status="okay";
                        port-index = <4>;
                        bus-width = <4>;
                        remote-endpoint = <&avt_csi2_csi_out4>;
                    };
                };

                port@5 {
                    reg = <5>;
                    status="okay";
                    avt_csi2_vi_in5: endpoint {
                        status="okay";
                        port-index = <5>;
                        bus-width = <4>;
                        remote-endpoint = <&avt_csi2_csi_out5>;
                    };
                };
            };

};


	    host1x@13e00000 {
          status = "okay";
		 nvcsi@15a00000 {
            num-channels = <6>;
            #address-cells = <1>;
            #size-cells = <0>;
            status="okay";

            channel@0 {
                status="okay";
                reg = <0>;
                ports {
                    status="okay";
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        status="okay";
                        avt_csi2_csi_in0: endpoint@0 {
                            status="okay";
                            port-index = <0>;
                            bus-width = <2>;
                            remote-endpoint = <&avt_csi2_cam_out0>;
                        };
                    };
                    port@1 {
                        status="okay";
                        reg = <1>;
                        avt_csi2_csi_out0: endpoint@1 {
                            status="okay";
                            remote-endpoint = <&avt_csi2_vi_in0>;
                        };
                    };
                };
            };
			
            channel@1 {
                status="okay";
                reg = <1>;
                ports {
                    status="okay";
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        status="okay";
                        avt_csi2_csi_in1: endpoint@2 {
                            status="okay";
                            port-index = <1>;
                            bus-width = <2>;
                            remote-endpoint = <&avt_csi2_cam_out1>;
                        };
                    };
                    port@1 {
                        status="okay";
                        reg = <1>;
                        avt_csi2_csi_out1: endpoint@3 {
                            status="okay";
                            remote-endpoint = <&avt_csi2_vi_in1>;
                        };
                    };
                };
            };
			

            channel@2 {
                status="okay";
                reg = <2>;
                ports {
                    status="okay";
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        status="okay";
                        avt_csi2_csi_in2: endpoint@4 {
                            status="okay";
                            port-index = <2>;
                            bus-width = <2>;
                            remote-endpoint = <&avt_csi2_cam_out2>;
                        };
                    };
                    port@1 {
                        status="okay";
                        reg = <1>;
                        avt_csi2_csi_out2: endpoint@5 {
                            status="okay";
                            remote-endpoint = <&avt_csi2_vi_in2>;
                        };
                    };
                };
            };
            channel@3 {
                status="okay";
                reg = <3>;
                ports {
                    status="okay";
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        status="okay";
                        avt_csi2_csi_in3: endpoint@6 {
                            status="okay";
                            port-index = <3>;
                            bus-width = <2>;
                            remote-endpoint = <&avt_csi2_cam_out3>;
                        };
                    };
                    port@1 {
                        status="okay";
                        reg = <1>;
                        avt_csi2_csi_out3: endpoint@7 {
                            status="okay";
                            remote-endpoint = <&avt_csi2_vi_in3>;
                        };
                    };
                };
            };

            channel@4 {
                status="okay";
                reg = <4>;
                ports {
                    status="okay";
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        status="okay";
                        avt_csi2_csi_in4: endpoint@8 {
                            status="okay";
                            port-index = <4>;
                            bus-width = <4>;
                            remote-endpoint = <&avt_csi2_cam_out4>;
                        };
                    };
                    port@1 {
                        status="okay";
                        reg = <1>;
                        avt_csi2_csi_out4: endpoint@9 {
                            status="okay";
                            remote-endpoint = <&avt_csi2_vi_in4>;
                        };
                    };
                };
            };

            channel@5 {
                status="okay";
                reg = <5>;
                ports {
                    status="okay";
                    #address-cells = <1>;
                    #size-cells = <0>;
                    port@0 {
                        reg = <0>;
                        status="okay";
                        avt_csi2_csi_in5: endpoint@10 {
                            status="okay";
                            port-index = <6>;
                            bus-width = <4>;
                            remote-endpoint = <&avt_csi2_cam_out5>;
                        };
                    };
                    port@1 {
                        status="okay";
                        reg = <1>;
                        avt_csi2_csi_out5: endpoint@11 {
                            status="okay";
                            remote-endpoint = <&avt_csi2_vi_in5>;
                        };
                    };
                };
            };
        };
	};
	
	
/**I2C2**/
	i2c@c240000{
		tca9544@72 {
			compatible = "nxp,pca9544";
            reg = <0x72>;
            #address-cells = <1>;
            #size-cells = <0>;
            skip_mux_detect = "yes";

            vif-supply = <&vdd_1v8_sys>;
            vcc-supply = <&vdd_1v8_sys>;

            vcc_lp = "vcc";
            force_bus_start = <0x1A>;
            status = "okay";
			
			i2c@0{
				reg = <0>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;

				avt_csi2_a@3c {
					AVT_NODE_COMMON
					devnode = "video0";
					reg = <0x3c>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;
						avt_csi2_cam_out0: endpoint {
							port-index = <0>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_csi_in0>;
						};
					};

				};
					mode0{
						num_lanes = "2";
						tegra_sinterface = "serial_a";
						AVT_MODE_0
					};
				};

			};
			i2c@1{
				reg = <1>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;				
				
				avt_csi2_b@3c{
					AVT_NODE_COMMON
					devnode = "video1";
					reg = <0x3c>;	
				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;
						avt_csi2_cam_out1: endpoint {
							port-index = <1>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_csi_in1>;
						};
					};
				};	
					mode0{
						num_lanes = "2";
						tegra_sinterface = "serial_b";
						AVT_MODE_0
					};
					
				};
				
			};
			
			i2c@2 {
				reg = <2>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;
				avt_csi2_c@3c{
					AVT_NODE_COMMON
					devnode = "video2";
					reg = <0x3c>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;
						avt_csi2_cam_out2: endpoint {
							port-index = <2>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_csi_in2>;
						};
					};
				};				
					mode0 {
						num_lanes = "2";
						tegra_sinterface = "serial_c";
						AVT_MODE_0
					};
				};
				


			};
			
			i2c@3{
				reg = <3>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;
				avt_csi2_c@3c{
					AVT_NODE_COMMON
					devnode = "video3";
					reg = <0x3c>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;
						avt_csi2_cam_out3: endpoint {
							port-index = <3>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_csi_in3>;
						};
					};
				};				
					mode0 {
						num_lanes = "2";
						tegra_sinterface = "serial_d";
						AVT_MODE_0
					};
				};
				

			};
		};
		
		tca9544@75{
            compatible = "nxp,pca9544";
            reg = <0x75>;
            #address-cells = <1>;
            #size-cells = <0>;
            skip_mux_detect = "yes";

            vif-supply = <&vdd_1v8_sys>;
            vcc-supply = <&vdd_1v8_sys>;

            vcc_lp = "vcc";
            force_bus_start = <0x1E>;
            status = "okay";
		
			i2c@0{
                reg = <0>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;
				avt_csi2_e@3c {
					AVT_NODE_COMMON
					devnode = "video4";
					reg = <0x3c>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;
						avt_csi2_cam_out4: endpoint {
							port-index = <4>;
							bus-width = <4>;
							remote-endpoint = <&avt_csi2_csi_in4>;
						};
					};
				};				
					mode0 {
						num_lanes = "4";
						tegra_sinterface = "serial_e";
						AVT_MODE_0
					};
				};

			
				
			};
			
			i2c@1 {
                reg = <1>;
                i2c-mux,deselect-on-exit;
                #address-cells = <1>;
                #size-cells = <0>;

				avt_csi2_f@3c {
					AVT_NODE_COMMON
					devnode = "video5";
					reg = <0x3c>;
	             ports {
                        #address-cells = <1>;
                        #size-cells = <0>;

                        port@0 {
                            reg = <0>;
                            avt_csi2_cam_out5: endpoint {
                                port-index = <6>;
                                bus-width = <4>;
                                remote-endpoint = <&avt_csi2_csi_in5>;
                            };
                        };
                    };				
					mode0 {
						num_lanes = "4";
						tegra_sinterface = "serial_g";
						AVT_MODE_0
					};
				};

	
			};
		};
		
	};
    /**I2C3*/
    i2c@3180000 {
        clock-frequency = <100000>;
        tca9539_74: tca9539@74 {
            compatible = "ti,tca9539";
            gpio-controller;
            #gpio-cells = <2>;
            reg = <0x74>;
            vcc-supply = <&vdd_1v8_sys>;
            status = "okay";
            tca9539_74_outlow {
                /*
                 * GPIO-A  :
                 * GPIO-B  :
                 * GPIO-C  :
                 * GPIO-D  :
                 * GPIO-E  :
                 * GPIO-F  :
                 * GPIO-G  : Derived from dip switch
                 * GPIO-H  : Not used
                 */
                gpio-hog;
                gpios = <0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0>;
                output-high;
                label = "tca9539_74_outlow_0",
                    "tca9539_74_outlow_1",
                    "tca9539_74_outlow_2",
                    "tca9539_74_outlow_3",
                    "tca9539_74_outlow_4",
                    "tca9539_74_outlow_5",
                    "tca9539_74_outlow_6",
                    "tca9539_74_outlow_7",
                    "tca9539_74_outlow_8",
                    "tca9539_74_outlow_9",
                    "tca9539_74_outlow_10",
                    "tca9539_74_outlow_11",
                    "tca9539_74_outlow_12",
                    "tca9539_74_outlow_13";
            };
            tca9539_74_outhigh {
                status= "disabled";
            };
            tca9539_74_input {
                status = "disabled";
            };
        };
    };

//hold off on the pinmux stuff for now
pinmux@2430000 {
			cam_i2c_scl_pp2 {
				nvidia,pins = "cam_i2c_scl_pp2";
				nvidia,function = "i2c3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
				nvidia,io-high-voltage = <TEGRA_PIN_ENABLE>;
				nvidia,lpdr = <TEGRA_PIN_DISABLE>;
			};

			cam_i2c_sda_pp3 {
				nvidia,pins = "cam_i2c_sda_pp3";
				nvidia,function = "i2c3";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
				nvidia,io-high-voltage = <TEGRA_PIN_ENABLE>;
				nvidia,lpdr = <TEGRA_PIN_DISABLE>;
			};
			
};
	tegra-camera-platform {
		 compatible = "nvidia, tegra-camera-platform";
        status = "okay";
        /**
        * Physical settings to calculate max ISO BW
        *
        * num_csi_lanes = <>;
        * Total number of CSI lanes when all cameras are active
        *
        * max_lane_speed = <>;
        * Max lane speed in Kbit/s
        *
        * min_bits_per_pixel = <>;
        * Min bits per pixel
        *
        * vi_peak_byte_per_pixel = <>;
        * Max byte per pixel for the VI ISO case
        *
        * vi_bw_margin_pct = <>;
        * Vi bandwidth margin in percentage
        *
        * max_pixel_rate = <>;
        * Max pixel rate in Kpixel/s for the ISP ISO case
        *
        * isp_peak_byte_per_pixel = <>;
        * Max byte per pixel for the ISP ISO case
        *
        * isp_bw_margin_pct = <>;
        * Isp bandwidth margin in percentage
        */
        num_csi_lanes = <18>;
        max_lane_speed = <1500000>;
        min_bits_per_pixel = <8>;
        vi_peak_byte_per_pixel = <2>;
        vi_bw_margin_pct = <25>;
        max_pixel_rate = <160000>;
        isp_peak_byte_per_pixel = <5>;
        isp_bw_margin_pct = <25>;

        /**
        * The general guideline for naming badge_info contains 3 parts, and is as follows,
        * The first part is the camera_board_id for the module; if the module is in a FFD
        * platform, then use the platform name for this part.
        * The second part contains the position of the module, ex. “rear” or “front”.
        * The third part contains the last 6 characters of a part number which is found
        * in the module's specsheet from the vender.
        */
	modules{
		module0 {
			status = "okay";
			badge = "avt_csi2_top";
			position = "top";
			orientation = "1";
			drivernode0 {
				status = "okay";
				pcl_id = "v4l2_sensor";
				devname = "avt_csi2 0 26-003c";
				proc-device-tree = "/proc/device-tree/i2c@c240000/tca9544@72/i2c@0/avt_csi2_a@3c";
			};
		};

        module1 {
                status = "okay";
                badge = "avt_csi2_center";
                position = "center";
                orientation = "1";
                drivernode0 {
				status = "okay";
				pcl_id = "v4l2_sensor";
				devname = "avt_csi2 1 27-003c";
				proc-device-tree = "/proc/device-tree/i2c@c240000/tca9544@72/i2c@1/avt_csi2_b@3c";
			};
		};
		
		module2 {
			status = "okay";
			badge = "avt_csi2_bottom";
			position = "bottom";
			orientation = "1";
			drivernode0 {
				status = "okay";
				pcl_id = "v4l2_sensor";
				devname = "avt_csi2 2 28-003c";
				proc-device-tree = "/proc/device-tree/i2c@c240000/tca9544@72/i2c@2/avt_csi2_c@3c";
			};
		};
        module3 {
			status = "okay";
			badge = "avt_csi2_centerleft";
			position = "center-left";
			orientation = "1";
			drivernode0 {
				pcl_id = "v4l2_sensor";
				devname = "avt_csi2 3 29-003c";
				proc-device-tree = "/proc/device-tree/i2c@c240000/tca9544@72/i2c@3/avt_csi2_d@3c";
			};
		};
		module4 {
			status = "okay";
			badge = "avt_csi2_centerright";
			position = "center-right";
			orientation = "1";
			drivernode0 {
				status = "okay";
				pcl_id = "v4l2_sensor";
				devname = "avt_csi2 4 30-003c";
				proc-device-tree = "/proc/device-tree/i2c@c240000/tca9544@75/i2c@0/avt_csi2_e@3c";
			};
		};

		module5 {
			status = "okay";
			badge = "avt_csi2_topright";
			position = "topright";
			orientation = "1";
			drivernode0 {
				status = "okay";
				pcl_id = "v4l2_sensor";
				devname = "avt_csi2 5 31-003c";
				proc-device-tree = "/proc/device-tree/i2c@c240000/tca9544@75/i2c@1/avt_csi2_f@3c";
			};
		};
	};

	};


};
